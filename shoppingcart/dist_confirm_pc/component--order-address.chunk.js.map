{"version":3,"sources":["webpack:///./src/components/pc/modal.jsx","webpack:///./src/components/pc/control.jsx","webpack:///./src/components/validator.jsx","webpack:///./src/components/pc/styled-control.jsx","webpack:///./src/components/pc/ask.jsx","webpack:///./src/pcpages/order-address.jsx","webpack:///./src/components/pc/address-form.jsx","webpack:///./src/components/checkbox.jsx"],"names":["_react","__webpack_require__","o","u","l","s","e","__esModule","default","d","t","Object","freeze","defineProperties","raw","value","MASK","styled","div","_templateObject","MODAL","_templateObject2","CLOSE","span","_templateObject3","Modal","props","_react2","createElement","Fragment","onClick","onClose","children","a","_reactValidation","n","indexOf","prototype","hasOwnProperty","call","Form","form","_ref","getValues","validate","validateAll","showError","hideError","_objectWithoutProperties","Input","control","_ref2","error","isChanged","isUsed","divStyle","style","className","_extends","Select","_ref4","Button","button","_ref3","hasErrors","disabled","ingoredisable","i","r","__reg_zip_us__","__reg_zip_uk__","__reg_zip_br__","__reg_phone_normal__","__reg_phone_br__","__reg_phone_ae_","__reg_phone_sa_","cpfcheck","result","replace","invalidos","length","add","parseInt","charAt","rev","required","toString","trim","number","validator","isInt","min","max","email","isEmail","cpf","zip","components","reg","country","test","phone","c","Control","FORMELEMENT","FormElement","label","tipMessage","_ask2","marginLeft","message","MutiElement","gap","ELEMENTS","_templateObject4","StyledAsk","dangerouslySetInnerHTML","__html","g","_reactRedux","_actions","_modal","p","_api","_reactIntl","b","ADDRESSBODY","ADDRESSTITLE","Address","this","_this","__proto__","getPrototypeOf","close","bind","editAddress","TypeError","create","constructor","enumerable","writable","configurable","setPrototypeOf","React","Component","_createClass","key","evt","preventDefault","history","goBack","address","_this2","transactionId","transaction","orderVos","order","UPDATINGADDRESS","updateorderaddress","id","orderNo","then","REFRESHORDERCONFIRM","catch","alert","_props","intl","formatMessage","marginTop","_addressForm2","updating","addressUpdating","showCancel","onCancel","connect","state","shippingDetail","dispatch","fetchTransaction","updateAddress","injectIntl","_control","_validator","_styledControl","_buttons","AddressFrom","isEdit","name","streetAddress1","unit","city","zipCode","phoneNumber","defaultAddress","countries","states","phoneArea","handleInputChange","event","target","type","checked","strs","split","splice","join","slice","setState","getStates","brForm","addressButtn","brAddressButtn","context","_errors","_state","newProps","oldAddress","initAddress","isDefaultAddress","countryValue","window","lang","getCountries","_this3","_this4","isConfirm","isNew","width","display","verticalAlign","ref","onSubmit","handleSubmit","height","onChange","validations","placeholder","changeCountry","map","BigButton","bgColor","backgroundColor","borderRadius","color","lineHeight","textAlign","outline","border","textTransform","cursor","fontSize","paddingLeft","marginRight"],"mappings":"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","file":"component--order-address.chunk.js","sourcesContent":["import React, {Fragment} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const MASK = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: fixed;\r\n\ttop:0;\r\n\tleft:0;\r\n\tbackground-color:rgba(0,0,0,.6);\r\n\tz-index:100;\r\n\toverflow: auto;\r\n`\r\n\r\nexport const MODAL = styled.div`\r\n\ttransform:translate(-50%,0);\r\n\tleft:50%;\r\n\ttop:60px;\r\n\tposition: absolute;\r\n\tmargin-bottom: 20px;\r\n`\r\n\r\nconst CLOSE = styled.span`\r\n\tfont-family: iconfont;\r\n\tcursor: pointer;\r\n\ttop: 15px;\r\n\tright: 15px;\r\n\tfont-size: 25px;\r\n\tposition: absolute;\r\n\tz-index:2;\r\n\tcolor: #666;\r\n`\r\n\r\nexport const Modal = (props) => <Fragment>\r\n  <MASK>\r\n\t  <MODAL>\r\n\t    <CLOSE onClick={props.onClose}>&#xe69a;</CLOSE>\r\n\t    {\r\n\t      props.children\r\n\t    }\r\n\t  </MODAL>\r\n  </MASK>\r\n</Fragment>\r\n","import React from 'react'\r\nimport { form, control, button } from 'react-validation'\r\n\r\nconst _form = ({ getValues, validate, validateAll, showError, hideError, children, ...props }) => ( // destruct non-valid props\r\n  <form {...props}>{children}</form>\r\n)\r\n\r\nconst _input = ({ error, isChanged, isUsed, divStyle, ...props }) => (\r\n  <div style={divStyle} className={isChanged && isUsed && error ? 'error' : ''}>\r\n    <input {...props} className=\"x-default-input\"/>\r\n    <div className=\"__errortext\">{isChanged && isUsed && error}</div>\r\n  </div>\r\n)\r\n\r\nconst _button = ({ hasErrors, ...props }) => {\r\n  return (\r\n    <button {...props} disabled={hasErrors && !props.ingoredisable}/>\r\n  )\r\n}\r\n\r\nconst _select = ({ error, isChanged, isUsed, ...props }) => (\r\n  <div className={isChanged && isUsed && error ? 'error' : ''}>\r\n    <select {...props} />\r\n    <div className=\"__errortext\">{isChanged && isUsed && error}</div>\r\n  </div>\r\n)\r\n\r\nexport const Form = form(_form)\r\nexport const Input = control(_input)\r\nexport const Select = control(_select)\r\nexport const Button = button(_button)\r\n","import React from 'react'\r\nimport validator from 'validator'\r\n\r\nexport const __reg_zip_us__ = /^(([0-9]{5})|([0-9]{5}-[0-9]{4}))$/\r\nexport const __reg_zip_uk__ = /^([a-z]|[A-Z]){1,2}\\w{1,2}\\s{0,1}[0-9]{1}([a-z]|[A-Z]){2}$/\r\nexport const __reg_zip_br__ = /^[0-9]{5}-[0-9]{3}$/\r\n\r\nexport const __reg_phone_normal__ = /^\\d{1,20}$/\r\nexport const __reg_phone_br__ = /^\\d{8,9}$/\r\nexport const __reg_phone_ae_ = /^(50|52|54|55|56|58|2|3|4|6|7|9){1,2}\\d{7}$/\r\nexport const __reg_phone_sa_ = /^(50|53|55|51|58|59|54|56|57|11|12|13|14|16|17|811){1,3}\\d{7}$/\r\n\r\nexport const cpfcheck = (value) => {\r\n  var result = true\r\n\r\n  value = value.replace('-', '')\r\n  value = value.replace(/\\./g, '')\r\n\r\n  // this is mostly not needed\r\n  var invalidos = [ '11111111111', '22222222222', '33333333333',\r\n    '44444444444', '55555555555', '66666666666',\r\n    '77777777777', '88888888888', '99999999999',\r\n    '00000000000' ]\r\n\r\n  for (let i = 0; i < invalidos.length; i++) {\r\n    if (invalidos[i] == value) {\r\n      result = false\r\n    }\r\n  }\r\n\r\n  if (value.length > 11) {\r\n    result = false\r\n  }\r\n\r\n  // validando primeiro digito\r\n  let add = 0\r\n  for (let i = 0; i < 9; i++) {\r\n    add += parseInt(value.charAt(i), 10) * (10 - i)\r\n  }\r\n  let rev = 11 - (add % 11)\r\n  if (rev == 10 || rev == 11) {\r\n    rev = 0\r\n  }\r\n  if (rev != parseInt(value.charAt(9), 10)) {\r\n    result = false\r\n  }\r\n\r\n  // validando segundo digito\r\n  add = 0\r\n  for (let i = 0; i < 10; i++) {\r\n    add += parseInt(value.charAt(i), 10) * (11 - i)\r\n  }\r\n  rev = 11 - (add % 11)\r\n  if (rev == 10 || rev == 11) {\r\n    rev = 0\r\n  }\r\n  if (rev != parseInt(value.charAt(10), 10)) {\r\n    result = false\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const required = (value) => {\r\n  if (!value || !value.toString().trim().length) {\r\n    return 'required'\r\n  }\r\n}\r\n\r\nexport const number = (value) => {\r\n  if (value && !validator.isInt(value, {min: 0, max: 99})) {\r\n    return <p></p>\r\n  }\r\n}\r\n\r\nexport const email = (value) => {\r\n  if (!validator.isEmail(value)) {\r\n    return <p>{value} is not a valid email</p>\r\n  }\r\n}\r\n\r\nexport const cpf = (value) => {\r\n  if (!cpfcheck(value)) { return <p>{value} is not a valid cpf</p> }\r\n}\r\n\r\nexport const zip = (value, props, components) => {\r\n  const country = components['country'][0].value\r\n  let reg, error\r\n  switch (country) {\r\n  \tcase 'US':\r\n  \t\treg = __reg_zip_us__\r\n  \t\terror = `Please enter 5 digits or 5 digits with a 4-digits number (E.g. 20001 or 20001-0000)`\r\n  \t\tbreak\r\n  \tcase 'GB':\r\n  \t\treg = __reg_zip_uk__\r\n  \t\terror = `Wrong ZIP CODE! Please offer us one or two-letter and one-two figures with a space end with one figure and two letters. (e.g. TN37 7HL,CW8 3AD)`\r\n  \t\tbreak\r\n  \tcase 'BR':\r\n  \t\treg = __reg_zip_br__\r\n  \t\terror = `O formato do endereço está incorreto, preencha o formulário de [01310-000]`\r\n  \t\tbreak\r\n  \tdefault:\r\n  \t\tbreak\r\n  }\r\n\r\n  if (reg && !reg.test(value)) {\r\n    return error\r\n  }\r\n}\r\n\r\nexport const phone = (value, props, components) => {\r\n  const country = components['country'][0].value\r\n  let reg, error\r\n  switch (country) {\r\n    case 'BR':\r\n      reg = __reg_phone_br__\r\n      error = `Insira pelo menos 8-9 números.`\r\n      break\r\n    case 'AE':\r\n      reg = __reg_phone_ae_\r\n      error = `Phone numbers should start with 50/52/54/55/56/58/2/3/4/6/7/9, followed by any 7 digits.`\r\n      break\r\n    case 'SA':\r\n      reg = __reg_phone_sa_\r\n      error = `Phone numbers should start with 50/53/55/51/58/59/54/56/57/11/12/13/14/16/17/811, followed by any 7 digits.`\r\n      break\r\n    default:\r\n      reg = __reg_phone_normal__\r\n      error = `Incorrect phone number format (numbers only, no formatting)`\r\n      break\r\n  }\r\n  if (reg && !reg.test(value)) {\r\n    return error\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Ask from './ask.jsx'\r\n\r\nconst Control = styled.div`\r\n\tposition: relative;\r\n`\r\n\r\nconst FORMELEMENT = styled.div`\r\n\tlabel{\r\n\t\tdisplay: block;\r\n\t\tcolor: #666;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\t&.__required > .__control{\r\n\t\t&::after{\r\n\t\t\tcontent: '*';\r\n\t    color: #E64545;\r\n\t    position: absolute;\r\n\t    right: -15px;\r\n\t    top: 0;\r\n\t    font-size: 20px;\r\n\t\t}\r\n\t}\r\n\r\n\t& .error{\r\n\t\t.__errortext{\r\n\t\t\tfont-size: 12px;\r\n\t\t\tmargin-top: 5px;\r\n\t\t\tcolor: #E64545;\r\n\t\t}\r\n\t\tinput, select{\r\n\t\t\tborder: solid 1px #E64545;\r\n\t\t}\r\n\t}\r\n\r\n\tinput, select{\r\n\t\tpadding-left: 15px;\r\n\t\tborder: solid 1px #cacaca;\r\n\t}\r\n\r\n\r\n`\r\n\r\nexport const FormElement = (props) => {\r\n  return <FORMELEMENT {...props}>\r\n    <label>{props.label} { props.tipMessage && <Ask style={{marginLeft: 2}} message={props.tipMessage}/> }</label>\r\n    <Control className=\"__control\">\r\n      { props.children}\r\n    </Control>\r\n  </FORMELEMENT>\r\n}\r\n\r\nexport const MutiElement = styled.div`\r\n\t&::after{\r\n\t\tcontent: '';\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t}\r\n\t& > div{\r\n\t\twidth: calc( 50% - ${props => (props.gap || 40) / 2}px );\r\n\t\t&:first-child{\r\n\t\t\tfloat: left;\r\n\t\t}\r\n\t\t&:last-child{\r\n\t\t\tfloat: right;\r\n\t\t}\r\n\t\t\r\n\t}\r\n`\r\n\r\nexport const ELEMENTS = styled.div`\r\n\t& > div{\r\n\t\tmargin-top: 15px;\r\n\t\t&:first-child{\r\n\t\t\tmargin-top: 0;\r\n\t\t}\r\n\t}\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledAsk = styled.div`\r\n\twidth: 16px;\r\n\theight: 16px;\r\n\tborder: solid 1px #999;\r\n\topacity: 0.99;\r\n\tcursor: pointer;\r\n\ttext-align: center;\r\n\tline-height: 16px;\r\n\tcolor: #999;\r\n\tborder-radius: 50%;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  position: relative;\r\n  z-index: 1;\r\n\r\n  .__answer{\r\n  \tposition: absolute;\r\n  \ttop: 20px;\r\n  \tleft: -200px;\r\n  \tborder-radius: 4px;\r\n\t\tborder: solid 1px #e6e6e6;\r\n\t\tpadding: 15px;\r\n\t\tline-height: 20px;\r\n\t\twidth: 420px;\r\n    background-color: #fff;\r\n    display: none;\r\n    color: #222;\r\n    font-size: 14px;\r\n    text-align: left;\r\n    z-index: 100;\r\n  }\r\n\r\n\r\n  &:hover{\r\n  \t.__answer{\r\n  \t\tdisplay: block;\r\n  \t}\r\n    border-color: #cacaca;\r\n    color: #cacaca;\r\n  }\r\n`\r\n\r\nexport default (props) => <StyledAsk {...props}>\r\n  <span>?</span>\r\n\r\n  {\r\n  \tprops.message && <div className=\"__answer\">\r\n\t  \t<div dangerouslySetInnerHTML={{__html: props.message}} />\r\n\t  </div>\r\n  }\r\n\r\n</StyledAsk>\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport {fetchTransaction} from '../store/actions.js'\r\nimport { Modal } from '../components/pc/modal.jsx'\r\nimport AddressFrom from '../components/pc/address-form.jsx'\r\nimport {updateorderaddress} from '../api'\r\nimport {updateAddress} from '../store/actions.js'\r\nimport {injectIntl} from 'react-intl'\r\nimport {__route_root__} from '../utils/utils.js'\r\n\r\nconst ADDRESSBODY = styled.div`\r\n  padding: 56px;\r\n  background-color: #fff;\r\n  width: 696px;\r\n`\r\n\r\nconst ADDRESSTITLE = styled.div`\r\n  font-family: HelveticaNeue-Medium;\r\n  font-size: 24px;\r\n  color: #222;\r\n`\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    transaction: state.transaction,\r\n    address: state.transaction ? state.transaction.orderVos[0].order.shippingDetail : null,\r\n    addressUpdating: state.addressUpdating\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    REFRESHORDERCONFIRM: (transactionId) => {\r\n      dispatch(fetchTransaction(transactionId))\r\n    },\r\n    UPDATINGADDRESS: (updating) => {\r\n      dispatch(updateAddress(updating))\r\n    }\r\n  }\r\n}\r\n\r\nconst Address = class extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.close = this.close.bind(this)\r\n    this.editAddress = this.editAddress.bind(this)\r\n  }\r\n\r\n  close (evt) {\r\n  \tevt.preventDefault()\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  editAddress (address) {\r\n    const transactionId = this.props.transaction.orderVos[0].order.transactionId\r\n    this.props.UPDATINGADDRESS(true)\r\n  \t\tupdateorderaddress({...address, id: this.props.address.id, orderNo: transactionId }).then(() => {\r\n      this.props.UPDATINGADDRESS(false)\r\n  \t\t\tthis.props.history.goBack()\r\n      this.props.REFRESHORDERCONFIRM(transactionId)\r\n  \t\t}).catch(({result}) => {\r\n  \t\t\talert(result)\r\n      this.props.UPDATINGADDRESS(false)\r\n  \t\t})\r\n  }\r\n\r\n  render () {\r\n    const { address, intl } = this.props\r\n\r\n    const FormBody = styled.div`\r\n    \tmax-width: 320px;\r\n    \twidth: 80%;\r\n    \tmargin-left: auto;\r\n    \tmargin-right: auto;\r\n      padding-bottom: 50px;\r\n\r\n    `\r\n\r\n    return <Modal onClose={this.close.bind(this)}>\r\n      <ADDRESSBODY>\r\n        <ADDRESSTITLE>\r\n          { intl.formatMessage({id: 'shipping_address'}) }\r\n        </ADDRESSTITLE>\r\n        <div style={{marginTop: 25}}>\r\n          <AddressFrom updating={this.props.addressUpdating} address={address} editAddress={this.editAddress} showCancel={true} onCancel={this.close.bind(this)}/>\r\n        </div>\r\n\r\n      </ADDRESSBODY>\r\n    </Modal>\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Address))\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Form, Input, Select, Button} from './control.jsx'\r\nimport {required, email, zip, phone, number} from '../validator.jsx'\r\nimport {FormElement, MutiElement, ELEMENTS} from './styled-control.jsx'\r\nimport {injectIntl} from 'react-intl'\r\nimport {getCountries, getStates} from '../../api'\r\nimport CheckBox from '../checkbox.jsx'\r\nimport {BigButton} from '../msite/buttons.jsx'\r\n\r\nconst getCountryCode = () => {\r\n  let strs = window.lang ? window.lang.split('_') : []\r\n  return strs[1] || 'US'\r\n}\r\n\r\nconst AddressFrom = class extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      isEdit: false,\r\n      name: '',\r\n      streetAddress1: '',\r\n      unit: '',\r\n      city: '',\r\n      zipCode: '',\r\n      state: '',\r\n      country: '',\r\n      phoneNumber: '',\r\n      defaultAddress: false,\r\n      countries: null,\r\n      states: null,\r\n      phoneArea: ''\r\n    }\r\n    this.handleInputChange = this.handleInputChange.bind(this)\r\n  }\r\n\r\n  handleInputChange (event) {\r\n    const target = event.target\r\n    let value = target.type === 'checkbox' ? target.checked : target.value\r\n    const name = target.name\r\n    if (name === 'zipCode' && this.state.country === 'BR') {\r\n      if (value && value.length > 5) {\r\n        var strs = value.replace(/-/ig, '').split('')\r\n        strs.splice(5, 0, '-')\r\n        value = strs.join('')\r\n      }\r\n    }\r\n\r\n    if (name === 'phoneArea') {\r\n      if (value && value.length > 2) {\r\n        value = value.slice(0, 2)\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  changeCountry (event) {\r\n    const {value} = event.target\r\n    this.getStates(value)\r\n    this.setState({state: ''})\r\n  }\r\n\r\n  handleSubmit (event) {\r\n    event.preventDefault()\r\n\r\n    const form = this.state.country === 'BR' ? this.brForm : this.form\r\n    const addressButtn = this.state.country === 'BR' ? this.brAddressButtn : this.addressButtn\r\n\r\n    form.validateAll()\r\n\r\n    if (!addressButtn.context._errors || addressButtn.context._errors.length < 1) {\r\n      const {\r\n        name,\r\n        streetAddress1,\r\n        unit,\r\n        city,\r\n        zipCode,\r\n        state,\r\n        country,\r\n        phoneNumber,\r\n        defaultAddress,\r\n        phoneArea\r\n      } = this.state\r\n\r\n      this.props.editAddress({\r\n        name,\r\n        streetAddress1,\r\n        unit,\r\n        city,\r\n        zipCode,\r\n        state,\r\n        country,\r\n        phoneNumber,\r\n        defaultAddress,\r\n        phoneArea\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps (newProps) {\r\n    const {address} = newProps\r\n    const oldAddress = this.props.address\r\n    if (oldAddress == null || address.id != oldAddress.id) {\r\n      this.initAddress(address)\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    const {address} = this.props\r\n    this.initAddress(address)\r\n  }\r\n\r\n  initAddress (address) {\r\n    if (address) {\r\n      const {\r\n        name,\r\n        streetAddress1,\r\n        unit,\r\n        city,\r\n        zipCode,\r\n        phoneNumber,\r\n        isDefaultAddress,\r\n        country,\r\n        state,\r\n        phoneArea\r\n      } = address\r\n\r\n      const isStructotState = s => s && s.value && s.label\r\n      const countryValue = country ? country.value : ''\r\n\r\n      this.setState({\r\n        isEdit: true,\r\n        name,\r\n        streetAddress1,\r\n        unit,\r\n        city,\r\n        zipCode,\r\n        phoneNumber,\r\n        country: countryValue,\r\n        state: state ? state.value : '',\r\n        defaultAddress: isDefaultAddress,\r\n        phoneArea: phoneArea || ''\r\n      })\r\n\r\n      // if (isStructotState(state)) {\r\n      this.getStates(countryValue)\r\n      // }\r\n    } else {\r\n      let country = this.state.country || getCountryCode()\r\n      this.setState({\r\n        country: country,\r\n        defaultAddress: true\r\n      })\r\n      this.getStates(country)\r\n    }\r\n\r\n    getCountries().then(({result}) => {\r\n      this.setState({\r\n        countries: result\r\n      })\r\n    })\r\n  }\r\n\r\n  getStates (country) {\r\n    getStates(country).then(({result}) => {\r\n      this.setState({\r\n        states: result\r\n      })\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { intl, isNew, isConfirm } = this.props\r\n\r\n    const divStyle = (this.state.country === 'AE' || this.state.country === 'SA') ? {width: 'calc(100% - 79px)', marginLeft: 10, display: 'inline-block', verticalAlign: 'middle'} : {}\r\n\r\n    return <div>\r\n      <Form ref={ c => this.form = c } style={{display: `${this.state.country !== 'BR' ? 'block' : 'none'}`}} onSubmit={this.handleSubmit.bind(this)}>\r\n        <ELEMENTS>\r\n          <FormElement label={`${intl.formatMessage({id: 'full_name'})}:`} className=\"__required\">\r\n            <Input\r\n              name='name'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'street_address'})}:`} className=\"__required\">\r\n            <Input\r\n              name='streetAddress1'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.streetAddress1}\r\n              onChange={this.handleInputChange}\r\n              placeholder={intl.formatMessage({id: 'placeholder_street_address'})}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'unit'})}:`}>\r\n            <Input\r\n              name='unit'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.unit}\r\n              placeholder={intl.formatMessage({id: 'placeholder_unit'})}\r\n              onChange={this.handleInputChange}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'city'})}:`} className=\"__required\">\r\n            <Input\r\n              name='city'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.city}\r\n              onChange={this.handleInputChange}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <MutiElement>\r\n            <FormElement label={`${intl.formatMessage({id: 'country'})}:`} className=\"__required\">\r\n              <Select\r\n                className=\"x-select\"\r\n                value={this.state.country}\r\n                name='country'\r\n                style= {{width: '100%', height: 40}}\r\n                onChange={(evt) => { this.handleInputChange(evt); this.changeCountry(evt) }}\r\n                validations={[required]}>\r\n                <option value=''>Country</option>\r\n                {\r\n                  this.state.countries && this.state.countries.map(country => (\r\n                    <option key={country.value} value={country.value} >{country.label}</option>\r\n                  ))\r\n                }\r\n\r\n              </Select>\r\n            </FormElement>\r\n\r\n            <FormElement label={`${intl.formatMessage({id: 'state'})}:`} className={this.state.states && this.state.states.length ? '__required' : ''}>\r\n              {\r\n                this.state.states && this.state.states.length ? (\r\n                  <Select\r\n                    className=\"x-select\"\r\n                    name='state'\r\n                    style= {{width: '100%', height: 40}}\r\n                    value={this.state.state}\r\n                    onChange={this.handleInputChange}\r\n                    validations={[required]}>\r\n                    <option value=''>State</option>\r\n                    {\r\n                      this.state.states && this.state.states.map(state => (\r\n                        <option key={state.value} value={state.value} >{state.label}</option>\r\n                      ))\r\n                    }\r\n\r\n                  </Select>\r\n\r\n                ) : (\r\n                  <Input\r\n                    name='state'\r\n                    style= {{width: '100%', height: 40}}\r\n                    value={this.state.state}\r\n                    onChange={this.handleInputChange}/>\r\n                )\r\n              }\r\n            </FormElement>\r\n          </MutiElement>\r\n\r\n          <MutiElement>\r\n            <FormElement label={`${intl.formatMessage({id: 'zip_code'})}:`} className=\"__required\">\r\n              <Input\r\n                name='zipCode'\r\n                style= {{width: '100%', height: 40}}\r\n                value={this.state.zipCode}\r\n                onChange={this.handleInputChange}\r\n                validations={[required, zip]}/>\r\n            </FormElement>\r\n\r\n            <FormElement label={`${intl.formatMessage({id: 'phone_number'})}:`} className=\"__required\">\r\n\r\n              {\r\n                this.state.country === 'AE' && <span style={{width: 69, display: 'inline-block'}}>UAE +971</span>\r\n              }\r\n\r\n              {\r\n                this.state.country === 'SA' && <span style={{width: 69, display: 'inline-block'}}>KSA +966</span>\r\n              }\r\n\r\n              <Input\r\n                name='phoneNumber'\r\n                style= {{width: '100%', height: 40}}\r\n                divStyle={divStyle}\r\n                value={this.state.phoneNumber}\r\n                onChange={this.handleInputChange}\r\n                validations={[required, phone]}/>\r\n            </FormElement>\r\n\r\n          </MutiElement>\r\n\r\n          <MutiElement style={{marginTop: 24}}>\r\n            <div>\r\n\r\n              {\r\n                this.props.updating ? <BigButton className=\"__btn\" height={40} bgColor=\"#999\">\r\n                  {intl.formatMessage({id: 'please_wait'})}...\r\n                </BigButton> : <Button className=\"__submitbtn\" ref={c => this.addressButtn = c} ingoredisable=\"true\" style={{\r\n                  display: 'block',\r\n                  backgroundColor: '#222',\r\n                  borderRadius: 2,\r\n                  color: '#fff',\r\n                  height: 40,\r\n                  lineHeight: '40px',\r\n                  textAlign: 'center',\r\n                  outline: 'none',\r\n                  border: 'none',\r\n                  width: '100%',\r\n                  textTransform: 'uppercase',\r\n                  cursor: 'pointer',\r\n                  fontSize: 16\r\n                }}>{ isConfirm ? intl.formatMessage({id: 'confirm'}) : intl.formatMessage({id: 'save'})}</Button>\r\n\r\n              }\r\n\r\n            </div>\r\n\r\n            <div>\r\n              {\r\n                this.props.showCancel && <div className=\"__submitbtn\" style={{\r\n                  display: 'block',\r\n                  backgroundColor: '#cacaca',\r\n                  borderRadius: 2,\r\n                  color: '#fff',\r\n                  height: 40,\r\n                  lineHeight: '40px',\r\n                  textAlign: 'center',\r\n                  outline: 'none',\r\n                  border: 'none',\r\n                  width: '100%',\r\n                  textTransform: 'uppercase',\r\n                  fontSize: 16,\r\n                  cursor: 'pointer'\r\n                }} onClick={ this.props.onCancel }>{intl.formatMessage({id: 'cancel'})}</div>\r\n              }\r\n\r\n            </div>\r\n          </MutiElement>\r\n\r\n        </ELEMENTS>\r\n      </Form>\r\n\r\n      <Form style={{display: `${this.state.country === 'BR' ? 'block' : 'none'}`}} ref={ c => this.brForm = c } onSubmit={this.handleSubmit.bind(this)}>\r\n        <ELEMENTS>\r\n          <FormElement label={`${intl.formatMessage({id: 'full_name'})}:`} className=\"__required\">\r\n            <Input\r\n              name='name'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'street_address'})}:`} className=\"__required\">\r\n            <Input\r\n              name='streetAddress1'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.streetAddress1}\r\n              onChange={this.handleInputChange}\r\n              placeholder={intl.formatMessage({id: 'placeholder_street_address'})}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'unit'})}:`}>\r\n            <Input\r\n              name='unit'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.unit}\r\n              placeholder={intl.formatMessage({id: 'placeholder_unit'})}\r\n              onChange={this.handleInputChange}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'city'})}:`} className=\"__required\">\r\n            <Input\r\n              name='city'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.city}\r\n              onChange={this.handleInputChange}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <MutiElement>\r\n            <FormElement label={`${intl.formatMessage({id: 'country'})}:`} className=\"__required\">\r\n              <Select\r\n                className=\"x-select\"\r\n                value={this.state.country}\r\n                name='country'\r\n                style= {{width: '100%', height: 40}}\r\n                onChange={(evt) => { this.handleInputChange(evt); this.changeCountry(evt) }}\r\n                validations={[required]}>\r\n                <option value=''>Country</option>\r\n                {\r\n                  this.state.countries && this.state.countries.map(country => (\r\n                    <option key={country.value} value={country.value} >{country.label}</option>\r\n                  ))\r\n                }\r\n\r\n              </Select>\r\n            </FormElement>\r\n\r\n            <FormElement label={`${intl.formatMessage({id: 'state'})}:`} className={this.state.states && this.state.states.length ? '__required' : ''}>\r\n              {\r\n                this.state.states && this.state.states.length ? (\r\n                  <Select\r\n                    className=\"x-select\"\r\n                    name='state'\r\n                    style= {{width: '100%', height: 40}}\r\n                    value={this.state.state}\r\n                    onChange={this.handleInputChange}\r\n                    validations={[required]}>\r\n                    <option value=''>State</option>\r\n                    {\r\n                      this.state.states && this.state.states.map(state => (\r\n                        <option key={state.value} value={state.value} >{state.label}</option>\r\n                      ))\r\n                    }\r\n\r\n                  </Select>\r\n\r\n                ) : (\r\n                  <Input\r\n                    name='state'\r\n                    style= {{width: '100%', height: 40}}\r\n                    value={this.state.state}\r\n                    onChange={this.handleInputChange}/>\r\n                )\r\n              }\r\n            </FormElement>\r\n          </MutiElement>\r\n\r\n          <MutiElement>\r\n            <FormElement label={`${intl.formatMessage({id: 'zip_code'})}:`} className=\"__required\">\r\n              <Input\r\n                name='zipCode'\r\n                style= {{width: '100%', height: 40}}\r\n                value={this.state.zipCode}\r\n                onChange={this.handleInputChange}\r\n                validations={[required, zip]}/>\r\n            </FormElement>\r\n\r\n            <FormElement label={`${intl.formatMessage({id: 'phone_number'})}:`} className=\"__required\">\r\n              <span style={{width: 59, display: 'inline-block'}}>BR +55</span>\r\n              <Input\r\n                name=\"phoneArea\"\r\n                type=\"number\"\r\n                placeholder=\"Código\"\r\n                value={this.state.phoneArea}\r\n                onChange={this.handleInputChange}\r\n                validations={[number]}\r\n                style= {{width: '100%', height: 40, paddingLeft: 0, textAlign: 'center'}}\r\n                divStyle={{width: 55, marginRight: 10, display: 'inline-block'}}/>\r\n              <Input\r\n                name='phoneNumber'\r\n                divStyle={{width: 'calc(100% - 124px)', display: 'inline-block', verticalAlign: 'middle'}}\r\n                style= {{width: '100%', height: 40}}\r\n                value={this.state.phoneNumber}\r\n                onChange={this.handleInputChange}\r\n                validations={[required, phone]}/>\r\n            </FormElement>\r\n\r\n          </MutiElement>\r\n\r\n          <MutiElement style={{marginTop: 24}}>\r\n            <div>\r\n\r\n              {\r\n                this.props.updating ? <BigButton className=\"__btn\" height={40} bgColor=\"#999\">\r\n                  {intl.formatMessage({id: 'please_wait'})}...\r\n                </BigButton> : <Button className=\"__submitbtn\" ref={c => this.brAddressButtn = c} ingoredisable=\"true\" style={{\r\n                  display: 'block',\r\n                  backgroundColor: '#222',\r\n                  borderRadius: 2,\r\n                  color: '#fff',\r\n                  height: 40,\r\n                  lineHeight: '40px',\r\n                  textAlign: 'center',\r\n                  outline: 'none',\r\n                  border: 'none',\r\n                  width: '100%',\r\n                  textTransform: 'uppercase',\r\n                  cursor: 'pointer',\r\n                  fontSize: 16\r\n                }}>{ isConfirm ? intl.formatMessage({id: 'confirm'}) : intl.formatMessage({id: 'save'})}</Button>\r\n\r\n              }\r\n\r\n            </div>\r\n\r\n            <div>\r\n              {\r\n                this.props.showCancel && <div className=\"__submitbtn\" style={{\r\n                  display: 'block',\r\n                  backgroundColor: '#cacaca',\r\n                  borderRadius: 2,\r\n                  color: '#fff',\r\n                  height: 40,\r\n                  lineHeight: '40px',\r\n                  textAlign: 'center',\r\n                  outline: 'none',\r\n                  border: 'none',\r\n                  width: '100%',\r\n                  textTransform: 'uppercase',\r\n                  fontSize: 16,\r\n                  cursor: 'pointer'\r\n                }} onClick={ this.props.onCancel }>{intl.formatMessage({id: 'cancel'})}</div>\r\n              }\r\n\r\n            </div>\r\n          </MutiElement>\r\n\r\n        </ELEMENTS>\r\n      </Form>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default injectIntl(AddressFrom)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default styled.span`\r\n\tdisplay: inline-block;\r\n\t&::after{\r\n\t\tcontent: '\\\\e65a';\r\n\t\tdisplay: inline-block;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: ${props => props.fontSize || '20px'} ;\r\n\t\tfont-family: iconfont;\r\n\t\tcolor: #cacaca;\r\n\t}\r\n\r\n\t&.selected{\r\n\t\t&::after{\r\n\t\t\tcontent: '\\\\e658';\r\n\t\t\tcolor: ${props => props.disabled ? '#999' : '#222222'};\r\n\t\t}\r\n\t}\r\n`\r\n"],"sourceRoot":""}