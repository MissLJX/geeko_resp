{"version":3,"sources":["webpack:///./src/components/pc/modal.jsx","webpack:///./src/components/pc/control.jsx","webpack:///./src/components/validator.jsx","webpack:///./src/components/pc/styled-control.jsx","webpack:///./src/components/pc/ask.jsx","webpack:///./src/pcpages/order-address.jsx","webpack:///./src/components/pc/address-form.jsx","webpack:///./src/components/checkbox.jsx"],"names":["_react","__webpack_require__","o","d","l","s","e","__esModule","default","u","t","Object","freeze","defineProperties","raw","value","MASK","styled","div","_templateObject","MODAL","_templateObject2","CLOSE","span","_templateObject3","Modal","props","_react2","createElement","Fragment","onClick","onClose","children","a","_reactValidation","n","indexOf","prototype","hasOwnProperty","call","Form","form","_ref","getValues","validate","validateAll","showError","hideError","_objectWithoutProperties","Input","control","_ref2","error","isChanged","isUsed","divStyle","style","className","_extends","Select","_ref4","Button","button","_ref3","hasErrors","disabled","ingoredisable","i","r","__reg_zip_us__","__reg_zip_uk__","__reg_zip_br__","__reg_phone_normal__","__reg_phone_br__","__reg_phone_ae_","__reg_phone_sa_","__reg_document_ar__","__reg_document_cl__","__reg_document_co__","__reg_document_ur__","cpfcheck","result","replace","invalidos","length","add","parseInt","charAt","rev","dni","required","toString","trim","number","validator","isInt","min","max","email","isEmail","cpf","zip","components","reg","country","test","phone","getDNI","payMethod","473","defineProperty","ELEMENTS","MutiElement","FormElement","c","Control","FORMELEMENT","label","tipMessage","_ask2","marginLeft","message","gap","_templateObject4","StyledAsk","dangerouslySetInnerHTML","__html","g","_reactRedux","_actions","_modal","p","_api","_reactIntl","_","ADDRESSBODY","ADDRESSTITLE","Address","this","_this","__proto__","getPrototypeOf","close","bind","editAddress","TypeError","create","constructor","enumerable","writable","configurable","setPrototypeOf","React","Component","_createClass","key","evt","preventDefault","history","goBack","address","_this2","transactionId","transaction","UPDATINGADDRESS","updateorderaddress","id","then","REFRESHORDERCONFIRM","catch","alert","_props","intl","formatMessage","marginTop","_addressForm2","updating","addressUpdating","showCancel","onCancel","connect","state","shippingDetail","dispatch","fetchTransaction","updateAddress","injectIntl","_control","_validator","_styledControl","_buttons","AddressFrom","isEdit","name","streetAddress1","unit","city","zipCode","phoneNumber","defaultAddress","countries","states","phoneArea","hasValidated","handleInputChange","event","target","type","checked","strs","split","splice","join","slice","setState","getStates","brForm","addressButtn","brAddressButtn","context","_errors","_state","newProps","oldAddress","initAddress","isDefaultAddress","countryValue","window","lang","getCountries","_this3","former","needInitValidate","_this4","isConfirm","isNew","width","display","verticalAlign","ref","formRef","onSubmit","handleSubmit","height","onChange","validations","placeholder","disablecountry","changeCountry","map","BigButton","bgColor","backgroundColor","borderRadius","color","lineHeight","textAlign","outline","border","textTransform","cursor","fontSize","paddingLeft","marginRight"],"mappings":"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","file":"component--order-address.chunk.js","sourcesContent":["import React, {Fragment} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const MASK = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: fixed;\r\n\ttop:0;\r\n\tleft:0;\r\n\tbackground-color:rgba(0,0,0,.6);\r\n\tz-index:100;\r\n\toverflow: auto;\r\n`\r\n\r\nexport const MODAL = styled.div`\r\n\ttransform:translate(-50%,0);\r\n\tleft:50%;\r\n\ttop:60px;\r\n\tposition: absolute;\r\n\tmargin-bottom: 20px;\r\n`\r\n\r\nconst CLOSE = styled.span`\r\n\tfont-family: iconfont;\r\n\tcursor: pointer;\r\n\ttop: 15px;\r\n\tright: 15px;\r\n\tfont-size: 25px;\r\n\tposition: absolute;\r\n\tz-index:2;\r\n\tcolor: #666;\r\n`\r\n\r\nexport const Modal = (props) => <Fragment>\r\n  <MASK>\r\n\t  <MODAL>\r\n\t    <CLOSE onClick={props.onClose}>&#xe69a;</CLOSE>\r\n\t    {\r\n\t      props.children\r\n\t    }\r\n\t  </MODAL>\r\n  </MASK>\r\n</Fragment>\r\n","import React from 'react'\r\nimport { form, control, button } from 'react-validation'\r\n\r\nconst _form = ({ getValues, validate, validateAll, showError, hideError, children, ...props }) => ( // destruct non-valid props\r\n  <form {...props}>{children}</form>\r\n)\r\n\r\nconst _input = ({ error, isChanged, isUsed, divStyle, ...props }) => (\r\n  <div style={divStyle} className={isChanged && isUsed && error ? 'error' : ''}>\r\n    <input {...props} className=\"x-default-input\"/>\r\n    <div className=\"__errortext\">{isChanged && isUsed && error}</div>\r\n  </div>\r\n)\r\n\r\nconst _button = ({ hasErrors, ...props }) => {\r\n  return (\r\n    <button {...props} disabled={hasErrors && !props.ingoredisable}/>\r\n  )\r\n}\r\n\r\nconst _select = ({ error, isChanged, isUsed, ...props }) => (\r\n  <div className={isChanged && isUsed && error ? 'error' : ''}>\r\n    <select {...props} />\r\n    <div className=\"__errortext\">{isChanged && isUsed && error}</div>\r\n  </div>\r\n)\r\n\r\nexport const Form = form(_form)\r\nexport const Input = control(_input)\r\nexport const Select = control(_select)\r\nexport const Button = button(_button)\r\n","import React from 'react'\r\nimport validator from 'validator'\r\n\r\nexport const __reg_zip_us__ = /^(([0-9]{5})|([0-9]{5}-[0-9]{4}))$/\r\nexport const __reg_zip_uk__ = /^([a-z]|[A-Z]){1,2}\\w{1,2}\\s{0,1}[0-9]{1}([a-z]|[A-Z]){2}$/\r\nexport const __reg_zip_br__ = /^[0-9]{5}-[0-9]{3}$/\r\n\r\nexport const __reg_phone_normal__ = /^\\d{1,20}$/\r\nexport const __reg_phone_br__ = /^\\d{8,9}$/\r\nexport const __reg_phone_ae_ = /^(50|52|54|55|56|58|2|3|4|6|7|9){1,2}\\d{7}$/\r\nexport const __reg_phone_sa_ = /^(50|53|55|51|58|59|54|56|57|11|12|13|14|16|17|811){1,3}\\d{7}$/\r\n\r\n// Argentina DNI or CUIT between 7 to 9, or 11 digits\r\nexport const __reg_document_ar__ = /^(\\d{7,9}|\\d{11})$/\r\n\r\n// Chile CI/RUT between 8 to 9 digits\r\nexport const __reg_document_cl__ = /^\\d{8,9}$/\r\n\r\n// Colombia CC between 6 to 10 digits\r\nexport const __reg_document_co__ = /^\\d{6,10}$/\r\n\r\n// Uruguay CI between 6 to 8 digits\r\nexport const __reg_document_ur__ = /^\\d{6,8}$/\r\n\r\nexport const cpfcheck = (value) => {\r\n  var result = true\r\n\r\n  value = value.replace('-', '')\r\n  value = value.replace(/\\./g, '')\r\n\r\n  // this is mostly not needed\r\n  var invalidos = [ '11111111111', '22222222222', '33333333333',\r\n    '44444444444', '55555555555', '66666666666',\r\n    '77777777777', '88888888888', '99999999999',\r\n    '00000000000' ]\r\n\r\n  for (let i = 0; i < invalidos.length; i++) {\r\n    if (invalidos[i] == value) {\r\n      result = false\r\n    }\r\n  }\r\n\r\n  if (value.length > 11) {\r\n    result = false\r\n  }\r\n\r\n  // validando primeiro digito\r\n  let add = 0\r\n  for (let i = 0; i < 9; i++) {\r\n    add += parseInt(value.charAt(i), 10) * (10 - i)\r\n  }\r\n  let rev = 11 - (add % 11)\r\n  if (rev == 10 || rev == 11) {\r\n    rev = 0\r\n  }\r\n  if (rev != parseInt(value.charAt(9), 10)) {\r\n    result = false\r\n  }\r\n\r\n  // validando segundo digito\r\n  add = 0\r\n  for (let i = 0; i < 10; i++) {\r\n    add += parseInt(value.charAt(i), 10) * (11 - i)\r\n  }\r\n  rev = 11 - (add % 11)\r\n  if (rev == 10 || rev == 11) {\r\n    rev = 0\r\n  }\r\n  if (rev != parseInt(value.charAt(10), 10)) {\r\n    result = false\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const required = (value) => {\r\n  if (!value || !value.toString().trim().length) {\r\n    return 'required'\r\n  }\r\n}\r\n\r\nexport const number = (value) => {\r\n  if (value && !validator.isInt(value, {min: 0, max: 99})) {\r\n    return <p></p>\r\n  }\r\n}\r\n\r\nexport const email = (value) => {\r\n  if (!validator.isEmail(value)) {\r\n    return <p>{value} is not a valid email</p>\r\n  }\r\n}\r\n\r\nexport const cpf = (value) => {\r\n  if (!cpfcheck(value)) { return <p>{value} is not a valid cpf</p> }\r\n}\r\n\r\nexport const zip = (value, props, components) => {\r\n  const country = components['country'][0].value\r\n  let reg, error\r\n  switch (country) {\r\n  \tcase 'US':\r\n  \t\treg = __reg_zip_us__\r\n  \t\terror = `Please enter 5 digits or 5 digits with a 4-digits number (E.g. 20001 or 20001-0000)`\r\n  \t\tbreak\r\n  \tcase 'GB':\r\n  \t\treg = __reg_zip_uk__\r\n  \t\terror = `Wrong ZIP CODE! Please offer us one or two-letter and one-two figures with a space end with one figure and two letters. (e.g. TN37 7HL,CW8 3AD)`\r\n  \t\tbreak\r\n  \tcase 'BR':\r\n  \t\treg = __reg_zip_br__\r\n  \t\terror = `O formato do endereço está incorreto, preencha o formulário de [01310-000]`\r\n  \t\tbreak\r\n  \tdefault:\r\n  \t\tbreak\r\n  }\r\n\r\n  if (reg && !reg.test(value)) {\r\n    return error\r\n  }\r\n}\r\n\r\nexport const phone = (value, props, components) => {\r\n  const country = components['country'][0].value\r\n  let reg, error\r\n  switch (country) {\r\n    case 'BR':\r\n      reg = __reg_phone_br__\r\n      error = `Insira pelo menos 8-9 números.`\r\n      break\r\n    case 'AE':\r\n      reg = __reg_phone_ae_\r\n      error = `Phone numbers should start with 50/52/54/55/56/58/2/3/4/6/7/9, followed by any 7 digits.`\r\n      break\r\n    case 'SA':\r\n      reg = __reg_phone_sa_\r\n      error = `Phone numbers should start with 50/53/55/51/58/59/54/56/57/11/12/13/14/16/17/811, followed by any 7 digits.`\r\n      break\r\n    default:\r\n      reg = __reg_phone_normal__\r\n      error = `Incorrect phone number format (numbers only, no formatting)`\r\n      break\r\n  }\r\n  if (reg && !reg.test(value)) {\r\n    return error\r\n  }\r\n}\r\n\r\nexport const dni = (country) => {\r\n  let reg, error\r\n  switch (country) {\r\n    case 'AR':\r\n      reg = __reg_document_ar__\r\n      error = 'DNI debe estar entre 7 a 9, u 11 dígitos'\r\n      break\r\n    case 'CL':\r\n      reg = __reg_document_cl__\r\n      error = 'CI/RUT debe tener entre 8 y 9 dígitos'\r\n      break\r\n    case 'CO':\r\n      reg = __reg_document_co__\r\n      error = 'Cédula de ciudadanía debe tener entre 6 y 10 dígitos'\r\n      break\r\n    case 'UY':\r\n      reg = __reg_document_ur__\r\n      error = 'Cédula de identidad debe tener entre 6 y 8 dígitos'\r\n      break\r\n    default:\r\n      reg = /\\d/\r\n      error = 'Incorrect document'\r\n      break\r\n  }\r\n\r\n  return (value) => {\r\n    if (reg && !reg.test(value)) {\r\n      return error\r\n    }\r\n  }\r\n}\r\n\r\nexport const getDNI = (payMethod) => {\r\n  switch (payMethod) {\r\n    case '26':\r\n    case '27':\r\n    case '28':\r\n      return dni('AR')\r\n    case '30':\r\n    case '31':\r\n    case '32':\r\n      return dni('CO')\r\n    case '30':\r\n    case '31':\r\n    case '32':\r\n      return dni('CL')\r\n    case '36':\r\n    case '37':\r\n      return dni('UY')\r\n    default:\r\n      return dni('US')\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Ask from './ask.jsx'\r\n\r\nconst Control = styled.div`\r\n\tposition: relative;\r\n`\r\n\r\nconst FORMELEMENT = styled.div`\r\n\tlabel{\r\n\t\tdisplay: block;\r\n\t\tcolor: #666;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\t&.__required > .__control{\r\n\t\t&::after{\r\n\t\t\tcontent: '*';\r\n\t    color: #E64545;\r\n\t    position: absolute;\r\n\t    right: -15px;\r\n\t    top: 0;\r\n\t    font-size: 20px;\r\n\t\t}\r\n\t}\r\n\r\n\t& .error{\r\n\t\t.__errortext{\r\n\t\t\tfont-size: 12px;\r\n\t\t\tmargin-top: 5px;\r\n\t\t\tcolor: #E64545;\r\n\t\t}\r\n\t\tinput, select{\r\n\t\t\tborder: solid 1px #E64545;\r\n\t\t}\r\n\t}\r\n\r\n\tinput, select{\r\n\t\tpadding-left: 15px;\r\n\t\tborder: solid 1px #cacaca;\r\n\t}\r\n\r\n\tinput[disabled], select[disabled]{\r\n\t\tborder-color: rgb(202,202,202);\r\n    color: rgb(202,202,202);\r\n\t}\r\n\r\n\r\n`\r\n\r\nexport const FormElement = (props) => {\r\n  return <FORMELEMENT {...props}>\r\n    <label>{props.label} { props.tipMessage && <Ask style={{marginLeft: 2}} message={props.tipMessage}/> }</label>\r\n    <Control className=\"__control\">\r\n      { props.children}\r\n    </Control>\r\n  </FORMELEMENT>\r\n}\r\n\r\nexport const MutiElement = styled.div`\r\n\t&::after{\r\n\t\tcontent: '';\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t}\r\n\t& > div{\r\n\t\twidth: calc( 50% - ${props => (props.gap || 40) / 2}px );\r\n\t\t&:first-child{\r\n\t\t\tfloat: left;\r\n\t\t}\r\n\t\t&:last-child{\r\n\t\t\tfloat: right;\r\n\t\t}\r\n\t\t\r\n\t}\r\n`\r\n\r\nexport const ELEMENTS = styled.div`\r\n\t& > div{\r\n\t\tmargin-top: 15px;\r\n\t\t&:first-child{\r\n\t\t\tmargin-top: 0;\r\n\t\t}\r\n\t}\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledAsk = styled.div`\r\n\twidth: 16px;\r\n\theight: 16px;\r\n\tborder: solid 1px #999;\r\n\topacity: 0.99;\r\n\tcursor: pointer;\r\n\ttext-align: center;\r\n\tline-height: 16px;\r\n\tcolor: #999;\r\n\tborder-radius: 50%;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  position: relative;\r\n  z-index: 1;\r\n\r\n  .__answer{\r\n  \tposition: absolute;\r\n  \ttop: 20px;\r\n  \tleft: -200px;\r\n  \tborder-radius: 4px;\r\n\t\tborder: solid 1px #e6e6e6;\r\n\t\tpadding: 15px;\r\n\t\tline-height: 20px;\r\n\t\twidth: 420px;\r\n    background-color: #fff;\r\n    display: none;\r\n    color: #222;\r\n    font-size: 14px;\r\n    text-align: left;\r\n    z-index: 100;\r\n  }\r\n\r\n\r\n  &:hover{\r\n  \t.__answer{\r\n  \t\tdisplay: block;\r\n  \t}\r\n    border-color: #cacaca;\r\n    color: #cacaca;\r\n  }\r\n`\r\n\r\nexport default (props) => <StyledAsk {...props}>\r\n  <span>?</span>\r\n\r\n  {\r\n  \tprops.message && <div className=\"__answer\">\r\n\t  \t<div dangerouslySetInnerHTML={{__html: props.message}} />\r\n\t  </div>\r\n  }\r\n\r\n</StyledAsk>\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport {fetchTransaction} from '../store/actions.js'\r\nimport { Modal } from '../components/pc/modal.jsx'\r\nimport AddressFrom from '../components/pc/address-form.jsx'\r\nimport {updateorderaddress} from '../api'\r\nimport {updateAddress} from '../store/actions.js'\r\nimport {injectIntl} from 'react-intl'\r\nimport {__route_root__} from '../utils/utils.js'\r\n\r\nconst ADDRESSBODY = styled.div`\r\n  padding: 56px;\r\n  background-color: #fff;\r\n  width: 696px;\r\n`\r\n\r\nconst ADDRESSTITLE = styled.div`\r\n  font-family: HelveticaNeue-Medium;\r\n  font-size: 24px;\r\n  color: #222;\r\n`\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    transaction: state.transaction,\r\n    address: state.transaction ? state.transaction.shippingDetail : null,\r\n    addressUpdating: state.addressUpdating\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    REFRESHORDERCONFIRM: (transactionId) => {\r\n      dispatch(fetchTransaction(transactionId))\r\n    },\r\n    UPDATINGADDRESS: (updating) => {\r\n      dispatch(updateAddress(updating))\r\n    }\r\n  }\r\n}\r\n\r\nconst Address = class extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.close = this.close.bind(this)\r\n    this.editAddress = this.editAddress.bind(this)\r\n  }\r\n\r\n  close (evt) {\r\n  \tevt.preventDefault()\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  editAddress (address) {\r\n    const transactionId = this.props.transaction.transactionId\r\n    this.props.UPDATINGADDRESS(true)\r\n  \t\tupdateorderaddress({...address, id: this.props.address.id, transactionId: transactionId }).then(() => {\r\n      this.props.UPDATINGADDRESS(false)\r\n  \t\t\tthis.props.history.goBack()\r\n      this.props.REFRESHORDERCONFIRM(transactionId)\r\n  \t\t}).catch(({result}) => {\r\n  \t\t\talert(result)\r\n      this.props.UPDATINGADDRESS(false)\r\n  \t\t})\r\n  }\r\n\r\n  render () {\r\n    const { address, intl } = this.props\r\n\r\n    const FormBody = styled.div`\r\n    \tmax-width: 320px;\r\n    \twidth: 80%;\r\n    \tmargin-left: auto;\r\n    \tmargin-right: auto;\r\n      padding-bottom: 50px;\r\n\r\n    `\r\n\r\n    return <Modal onClose={this.close.bind(this)}>\r\n      <ADDRESSBODY>\r\n        <ADDRESSTITLE>\r\n          { intl.formatMessage({id: 'shipping_address'}) }\r\n        </ADDRESSTITLE>\r\n        <div style={{marginTop: 25}}>\r\n          <AddressFrom updating={this.props.addressUpdating} address={address} editAddress={this.editAddress} showCancel={true} onCancel={this.close.bind(this)}/>\r\n        </div>\r\n\r\n      </ADDRESSBODY>\r\n    </Modal>\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Address))\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Form, Input, Select, Button} from './control.jsx'\r\nimport {required, email, zip, phone, number, cpf} from '../validator.jsx'\r\nimport {FormElement, MutiElement, ELEMENTS} from './styled-control.jsx'\r\nimport {injectIntl} from 'react-intl'\r\nimport {getCountries, getStates} from '../../api'\r\nimport CheckBox from '../checkbox.jsx'\r\nimport {BigButton} from '../msite/buttons.jsx'\r\n\r\nconst __Cpf_Tip_Message__ = 'CPF (Cadastro de Pessoa Física), utilizado para tributação, é necessário para todos os produtos enviados ao Brasil, independentemente de encomendas expressas ou contêineres logísticos.Quando preenchemos o conhecimento de embarque e fatura, por favor, não esqueça de preencher o número de contribuinte do destinatário.Na maioria dos casos, sua forma é o número digital como abaixo, XXX.XXX.XXX-XX'\r\n\r\nconst getCountryCode = () => {\r\n  let strs = window.lang ? window.lang.split('_') : []\r\n  return strs[1] || 'US'\r\n}\r\n\r\nconst AddressFrom = class extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      isEdit: false,\r\n      name: '',\r\n      streetAddress1: '',\r\n      unit: '',\r\n      city: '',\r\n      zipCode: '',\r\n      state: '',\r\n      country: '',\r\n      phoneNumber: '',\r\n      defaultAddress: false,\r\n      countries: null,\r\n      states: null,\r\n      phoneArea: '',\r\n      cpf: '',\r\n      hasValidated: false\r\n    }\r\n    this.handleInputChange = this.handleInputChange.bind(this)\r\n  }\r\n\r\n  handleInputChange (event) {\r\n    const target = event.target\r\n    let value = target.type === 'checkbox' ? target.checked : target.value\r\n    const name = target.name\r\n    if (name === 'zipCode' && this.state.country === 'BR') {\r\n      if (value && value.length > 5) {\r\n        var strs = value.replace(/-/ig, '').split('')\r\n        strs.splice(5, 0, '-')\r\n        value = strs.join('')\r\n      }\r\n    }\r\n\r\n    if (name === 'phoneArea') {\r\n      if (value && value.length > 2) {\r\n        value = value.slice(0, 2)\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  changeCountry (event) {\r\n    const {value} = event.target\r\n    this.getStates(value)\r\n    this.setState({state: ''})\r\n  }\r\n\r\n  handleSubmit (event) {\r\n    event.preventDefault()\r\n\r\n    const form = this.state.country === 'BR' ? this.brForm : this.form\r\n    const addressButtn = this.state.country === 'BR' ? this.brAddressButtn : this.addressButtn\r\n\r\n    form.validateAll()\r\n\r\n    if (!addressButtn.context._errors || addressButtn.context._errors.length < 1) {\r\n      const {\r\n        name,\r\n        streetAddress1,\r\n        unit,\r\n        city,\r\n        zipCode,\r\n        state,\r\n        country,\r\n        phoneNumber,\r\n        defaultAddress,\r\n        phoneArea,\r\n        cpf\r\n      } = this.state\r\n\r\n      this.props.editAddress({\r\n        name,\r\n        streetAddress1,\r\n        unit,\r\n        city,\r\n        zipCode,\r\n        state,\r\n        country,\r\n        phoneNumber,\r\n        defaultAddress,\r\n        phoneArea,\r\n        cpf\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps (newProps) {\r\n    const {address} = newProps\r\n    const oldAddress = this.props.address\r\n    if (oldAddress == null || address.id != oldAddress.id) {\r\n      this.initAddress(address)\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    const {address} = this.props\r\n    this.initAddress(address)\r\n  }\r\n\r\n  initAddress (address) {\r\n    if (address) {\r\n      const {\r\n        name,\r\n        streetAddress1,\r\n        unit,\r\n        city,\r\n        zipCode,\r\n        phoneNumber,\r\n        isDefaultAddress,\r\n        country,\r\n        state,\r\n        phoneArea,\r\n        cpf\r\n      } = address\r\n\r\n      const isStructotState = s => s && s.value && s.label\r\n      const countryValue = country ? country.value : ''\r\n\r\n      this.setState({\r\n        isEdit: true,\r\n        name,\r\n        streetAddress1,\r\n        unit,\r\n        city,\r\n        zipCode,\r\n        phoneNumber,\r\n        country: countryValue,\r\n        state: state ? state.value : '',\r\n        defaultAddress: isDefaultAddress,\r\n        phoneArea: phoneArea || '',\r\n        cpf: cpf || ''\r\n      })\r\n\r\n      // if (isStructotState(state)) {\r\n      this.getStates(countryValue)\r\n      // }\r\n    } else {\r\n      let country = this.state.country || getCountryCode()\r\n      this.setState({\r\n        country: country,\r\n        defaultAddress: true\r\n      })\r\n      this.getStates(country)\r\n    }\r\n\r\n    getCountries().then(({result}) => {\r\n      this.setState({\r\n        countries: result\r\n      })\r\n    })\r\n  }\r\n\r\n  getStates (country) {\r\n    getStates(country).then(({result}) => {\r\n      this.setState({\r\n        states: result\r\n      })\r\n    })\r\n  }\r\n\r\n  formRef (c, former) {\r\n    if (former === 'BR') {\r\n      this.brForm = c\r\n    } else {\r\n      this.form = c\r\n    }\r\n\r\n    if (this.props.needInitValidate && !this.state.hasValidated) {\r\n      c.validateAll()\r\n      this.setState({\r\n        hasValidated: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { intl, isNew, isConfirm } = this.props\r\n\r\n    const divStyle = (this.state.country === 'AE' || this.state.country === 'SA') ? {width: 'calc(100% - 79px)', marginLeft: 10, display: 'inline-block', verticalAlign: 'middle'} : {}\r\n\r\n    return <div>\r\n      <Form ref={ c => { this.formRef(c) } } style={{display: `${this.state.country !== 'BR' ? 'block' : 'none'}`}} onSubmit={this.handleSubmit.bind(this)}>\r\n        <ELEMENTS>\r\n          <FormElement label={`${intl.formatMessage({id: 'full_name'})}:`} className=\"__required\">\r\n            <Input\r\n              name='name'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'street_address'})}:`} className=\"__required\">\r\n            <Input\r\n              name='streetAddress1'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.streetAddress1}\r\n              onChange={this.handleInputChange}\r\n              placeholder={intl.formatMessage({id: 'placeholder_street_address'})}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'unit'})}:`}>\r\n            <Input\r\n              name='unit'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.unit}\r\n              placeholder={intl.formatMessage({id: 'placeholder_unit'})}\r\n              onChange={this.handleInputChange}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'city'})}:`} className=\"__required\">\r\n            <Input\r\n              name='city'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.city}\r\n              onChange={this.handleInputChange}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <MutiElement>\r\n            <FormElement label={`${intl.formatMessage({id: 'country'})}:`} className=\"__required\">\r\n              <Select\r\n                className=\"x-select\"\r\n                value={this.state.country}\r\n                name='country'\r\n                disabled={this.props.disablecountry}\r\n                style= {{width: '100%', height: 40}}\r\n                onChange={(evt) => { this.handleInputChange(evt); this.changeCountry(evt) }}\r\n                validations={[required]}>\r\n                <option value=''>Country</option>\r\n                {\r\n                  this.state.countries && this.state.countries.map(country => (\r\n                    <option key={country.value} value={country.value} >{country.label}</option>\r\n                  ))\r\n                }\r\n\r\n              </Select>\r\n            </FormElement>\r\n\r\n            <FormElement label={`${intl.formatMessage({id: 'state'})}:`} className={this.state.states && this.state.states.length ? '__required' : ''}>\r\n              {\r\n                this.state.states && this.state.states.length ? (\r\n                  <Select\r\n                    className=\"x-select\"\r\n                    name='state'\r\n                    style= {{width: '100%', height: 40}}\r\n                    value={this.state.state}\r\n                    onChange={this.handleInputChange}\r\n                    validations={[required]}>\r\n                    <option value=''>State</option>\r\n                    {\r\n                      this.state.states && this.state.states.map(state => (\r\n                        <option key={state.value} value={state.value} >{state.label}</option>\r\n                      ))\r\n                    }\r\n\r\n                  </Select>\r\n\r\n                ) : (\r\n                  <Input\r\n                    name='state'\r\n                    style= {{width: '100%', height: 40}}\r\n                    value={this.state.state}\r\n                    onChange={this.handleInputChange}/>\r\n                )\r\n              }\r\n            </FormElement>\r\n          </MutiElement>\r\n\r\n          <MutiElement>\r\n            <FormElement label={`${intl.formatMessage({id: 'zip_code'})}:`} className=\"__required\">\r\n              <Input\r\n                name='zipCode'\r\n                style= {{width: '100%', height: 40}}\r\n                value={this.state.zipCode}\r\n                onChange={this.handleInputChange}\r\n                validations={[required, zip]}/>\r\n            </FormElement>\r\n\r\n            <FormElement label={`${intl.formatMessage({id: 'phone_number'})}:`} className=\"__required\">\r\n\r\n              {\r\n                this.state.country === 'AE' && <span style={{width: 69, display: 'inline-block'}}>UAE +971</span>\r\n              }\r\n\r\n              {\r\n                this.state.country === 'SA' && <span style={{width: 69, display: 'inline-block'}}>KSA +966</span>\r\n              }\r\n\r\n              <Input\r\n                name='phoneNumber'\r\n                style= {{width: '100%', height: 40}}\r\n                divStyle={divStyle}\r\n                value={this.state.phoneNumber}\r\n                onChange={this.handleInputChange}\r\n                validations={[required, phone]}/>\r\n            </FormElement>\r\n\r\n          </MutiElement>\r\n\r\n          <MutiElement style={{marginTop: 24}}>\r\n            <div>\r\n\r\n              {\r\n                this.props.updating ? <BigButton className=\"__btn\" height={40} bgColor=\"#999\">\r\n                  {intl.formatMessage({id: 'please_wait'})}...\r\n                </BigButton> : <Button className=\"__submitbtn\" ref={c => this.addressButtn = c} ingoredisable=\"true\" style={{\r\n                  display: 'block',\r\n                  backgroundColor: '#222',\r\n                  borderRadius: 2,\r\n                  color: '#fff',\r\n                  height: 40,\r\n                  lineHeight: '40px',\r\n                  textAlign: 'center',\r\n                  outline: 'none',\r\n                  border: 'none',\r\n                  width: '100%',\r\n                  textTransform: 'uppercase',\r\n                  cursor: 'pointer',\r\n                  fontSize: 16\r\n                }}>{ isConfirm ? intl.formatMessage({id: 'confirm'}) : intl.formatMessage({id: 'save'})}</Button>\r\n\r\n              }\r\n\r\n            </div>\r\n\r\n            <div>\r\n              {\r\n                this.props.showCancel && <div className=\"__submitbtn\" style={{\r\n                  display: 'block',\r\n                  backgroundColor: '#cacaca',\r\n                  borderRadius: 2,\r\n                  color: '#fff',\r\n                  height: 40,\r\n                  lineHeight: '40px',\r\n                  textAlign: 'center',\r\n                  outline: 'none',\r\n                  border: 'none',\r\n                  width: '100%',\r\n                  textTransform: 'uppercase',\r\n                  fontSize: 16,\r\n                  cursor: 'pointer'\r\n                }} onClick={ this.props.onCancel }>{intl.formatMessage({id: 'cancel'})}</div>\r\n              }\r\n\r\n            </div>\r\n          </MutiElement>\r\n\r\n        </ELEMENTS>\r\n      </Form>\r\n\r\n      <Form style={{display: `${this.state.country === 'BR' ? 'block' : 'none'}`}} ref={ c => { this.formRef(c, 'BR') } } onSubmit={this.handleSubmit.bind(this)}>\r\n        <ELEMENTS>\r\n          <FormElement label={`${intl.formatMessage({id: 'full_name'})}:`} className=\"__required\">\r\n            <Input\r\n              name='name'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'street_address'})}:`} className=\"__required\">\r\n            <Input\r\n              name='streetAddress1'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.streetAddress1}\r\n              onChange={this.handleInputChange}\r\n              placeholder={intl.formatMessage({id: 'placeholder_street_address'})}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'unit'})}:`}>\r\n            <Input\r\n              name='unit'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.unit}\r\n              placeholder={intl.formatMessage({id: 'placeholder_unit'})}\r\n              onChange={this.handleInputChange}/>\r\n          </FormElement>\r\n\r\n          <FormElement label={`${intl.formatMessage({id: 'city'})}:`} className=\"__required\">\r\n            <Input\r\n              name='city'\r\n              style= {{width: '100%', height: 40}}\r\n              value={this.state.city}\r\n              onChange={this.handleInputChange}\r\n              validations={[required]}/>\r\n          </FormElement>\r\n\r\n          <MutiElement>\r\n            <FormElement label={`${intl.formatMessage({id: 'country'})}:`} className=\"__required\">\r\n              <Select\r\n                className=\"x-select\"\r\n                value={this.state.country}\r\n                name='country'\r\n                style= {{width: '100%', height: 40}}\r\n                disabled={this.props.disablecountry}\r\n                onChange={(evt) => { this.handleInputChange(evt); this.changeCountry(evt) }}\r\n                validations={[required]}>\r\n                <option value=''>Country</option>\r\n                {\r\n                  this.state.countries && this.state.countries.map(country => (\r\n                    <option key={country.value} value={country.value} >{country.label}</option>\r\n                  ))\r\n                }\r\n\r\n              </Select>\r\n            </FormElement>\r\n\r\n            <FormElement label={`${intl.formatMessage({id: 'state'})}:`} className={this.state.states && this.state.states.length ? '__required' : ''}>\r\n              {\r\n                this.state.states && this.state.states.length ? (\r\n                  <Select\r\n                    className=\"x-select\"\r\n                    name='state'\r\n                    style= {{width: '100%', height: 40}}\r\n                    value={this.state.state}\r\n                    onChange={this.handleInputChange}\r\n                    validations={[required]}>\r\n                    <option value=''>State</option>\r\n                    {\r\n                      this.state.states && this.state.states.map(state => (\r\n                        <option key={state.value} value={state.value} >{state.label}</option>\r\n                      ))\r\n                    }\r\n\r\n                  </Select>\r\n\r\n                ) : (\r\n                  <Input\r\n                    name='state'\r\n                    style= {{width: '100%', height: 40}}\r\n                    value={this.state.state}\r\n                    onChange={this.handleInputChange}/>\r\n                )\r\n              }\r\n            </FormElement>\r\n          </MutiElement>\r\n\r\n          <MutiElement>\r\n            <FormElement label={`${intl.formatMessage({id: 'zip_code'})}:`} className=\"__required\">\r\n              <Input\r\n                name='zipCode'\r\n                style= {{width: '100%', height: 40}}\r\n                value={this.state.zipCode}\r\n                onChange={this.handleInputChange}\r\n                validations={[required, zip]}/>\r\n            </FormElement>\r\n\r\n            <FormElement label={`${intl.formatMessage({id: 'phone_number'})}:`} className=\"__required\">\r\n              <span style={{width: 59, display: 'inline-block'}}>BR +55</span>\r\n              <Input\r\n                name=\"phoneArea\"\r\n                type=\"number\"\r\n                placeholder=\"Código\"\r\n                value={this.state.phoneArea}\r\n                onChange={this.handleInputChange}\r\n                validations={[number]}\r\n                style= {{width: '100%', height: 40, paddingLeft: 0, textAlign: 'center'}}\r\n                divStyle={{width: 55, marginRight: 10, display: 'inline-block'}}/>\r\n              <Input\r\n                name='phoneNumber'\r\n                divStyle={{width: 'calc(100% - 124px)', display: 'inline-block', verticalAlign: 'middle'}}\r\n                style= {{width: '100%', height: 40}}\r\n                value={this.state.phoneNumber}\r\n                onChange={this.handleInputChange}\r\n                validations={[required, phone]}/>\r\n            </FormElement>\r\n\r\n          </MutiElement>\r\n\r\n          <FormElement label={`CPF`} className=\"__required\" tipMessage={__Cpf_Tip_Message__}>\r\n            <Input\r\n              name=\"cpf\"\r\n              value={this.state.cpf}\r\n              onChange={this.handleInputChange}\r\n              style= {{width: '100%', height: 40}}\r\n              validations={[required, cpf]}/>\r\n          </FormElement>\r\n\r\n          <MutiElement style={{marginTop: 24}}>\r\n            <div>\r\n\r\n              {\r\n                this.props.updating ? <BigButton className=\"__btn\" height={40} bgColor=\"#999\">\r\n                  {intl.formatMessage({id: 'please_wait'})}...\r\n                </BigButton> : <Button className=\"__submitbtn\" ref={c => this.brAddressButtn = c} ingoredisable=\"true\" style={{\r\n                  display: 'block',\r\n                  backgroundColor: '#222',\r\n                  borderRadius: 2,\r\n                  color: '#fff',\r\n                  height: 40,\r\n                  lineHeight: '40px',\r\n                  textAlign: 'center',\r\n                  outline: 'none',\r\n                  border: 'none',\r\n                  width: '100%',\r\n                  textTransform: 'uppercase',\r\n                  cursor: 'pointer',\r\n                  fontSize: 16\r\n                }}>{ isConfirm ? intl.formatMessage({id: 'confirm'}) : intl.formatMessage({id: 'save'})}</Button>\r\n\r\n              }\r\n\r\n            </div>\r\n\r\n            <div>\r\n              {\r\n                this.props.showCancel && <div className=\"__submitbtn\" style={{\r\n                  display: 'block',\r\n                  backgroundColor: '#cacaca',\r\n                  borderRadius: 2,\r\n                  color: '#fff',\r\n                  height: 40,\r\n                  lineHeight: '40px',\r\n                  textAlign: 'center',\r\n                  outline: 'none',\r\n                  border: 'none',\r\n                  width: '100%',\r\n                  textTransform: 'uppercase',\r\n                  fontSize: 16,\r\n                  cursor: 'pointer'\r\n                }} onClick={ this.props.onCancel }>{intl.formatMessage({id: 'cancel'})}</div>\r\n              }\r\n\r\n            </div>\r\n          </MutiElement>\r\n\r\n        </ELEMENTS>\r\n      </Form>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default injectIntl(AddressFrom)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default styled.span`\r\n\tdisplay: inline-block;\r\n\t&::after{\r\n\t\tcontent: '\\\\e65a';\r\n\t\tdisplay: inline-block;\r\n\t\tcursor: pointer;\r\n\t\tfont-size: ${props => props.fontSize || '20px'} ;\r\n\t\tfont-family: iconfont;\r\n\t\tcolor: #cacaca;\r\n\t}\r\n\r\n\t&.selected{\r\n\t\t&::after{\r\n\t\t\tcontent: '\\\\e658';\r\n\t\t\tcolor: ${props => props.disabled ? '#999' : '#222222'};\r\n\t\t}\r\n\t}\r\n`\r\n"],"sourceRoot":""}